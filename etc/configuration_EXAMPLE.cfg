###############################################################################
###############################################################################
#########################    CONFIGURATION FILE     ###########################
###############################################################################
###############################################################################

# Please read carefully the configuration options


#-----------------------------------------------------------------------------#
# TFBoost Output directory 
# Inside this directory two other directories are created:
# plots/ => all the plots of the measurments, root files and pfds
# data/  => convoluted output signals
OutputDirectory = "results_diamond/"; 


#-----------------------------------------------------------------------------#
# Input directory (where are the input signals)
# InputFileExtension is the format of the file to read (.txt or .dat)
# NlineaToSkip is an integer to skip the first N lines of the files
# The internal format of the input files can be configured using:
# - the token by which the data are separated in the file (space, tab, comma)
# - the column in which the actual values are stored (starting from 0)
InputDirectory     = "CURRENTS_OUT/"; 
InputFileExtension = ".txt";
NlinesToSkip       = 0;
token              = " ";
column             = 1;


#-----------------------------------------------------------------------------#
# Maximum input files to process
MaxInputFiles      = 80000;


#-----------------------------------------------------------------------------#
# Time offset to be added to input signals 
# (this is in unit of dT, see below the transfer function options)
offset             = 2000; 


#-----------------------------------------------------------------------------#
# Flag to use always the same input signal,
# if true, please indicate the file name
UseSameCurve       = false;
FileName           = "Simulation150V_4439.dat";


#-----------------------------------------------------------------------------#
# For storage reason, only one plot with
# the convolution is plotted. This index chooses
# which one has to be plotted
IdxConvtoSave      = 0;


#-----------------------------------------------------------------------------#
# Flag to use the analytical convolution (if true) or take the 
# already convoluted signal from files (if false)
# If false, the input signals are considered as voltage signals,
# instead of current signals.
MakeConvolution        = true;



#-----------------------------------------------------------------------------#
# TIME AND VOLTAGED DIGITIZATION
#-----------------------------------------------------------------------------#
# Flag to simulate the time digitization of a TDC
# This will be actived only if the convolution is active
# If randomphase is true, the TDC clock will have a random phase
# with respect to the initial time of the signal.
# To choose the sampling time step please use the option
# "sampling_dT" inside the transfer function options
MakeTimeDigitization   = true;
randomphase            = true;

# Flag to simulate the voltage digitization of an ADC
# The user has to define the dynamic range of the ADC
# and the number of bits
MakeVoltageDigitization = true;
ADCmin                  = 0.0;   #Volts
ADCmax                  = 10e-3; #Volts
ADCnbits                = 8;


#-----------------------------------------------------------------------------#
# Trigger to reject "empty" events
# Two leading edges algoriths are present, one applied
# to signals with no noise, and the other to noisy signals
LE_reject_nonoise  = 0.01; #Volts
LE_reject_noise    = 0.01; #Volts


#-----------------------------------------------------------------------------#
# CONTROL FLOW FLAGS
#-----------------------------------------------------------------------------#
# The choice of these control flags
# turn on or off some measurements for the time of arrival.
#
#                                       +--------------+
#                            Lin.Fit    | CFD improved |
#                          +----------->| Ref.Method   |
#                          |            | LE improved  |
#           Gauss Fit      |            +--------------+
#        +---------------->+
#        |                 |             +-------------+
#        |                 | No Lin.Fit  | Simple LE   |
# TOA    |                 +------------>| Simple CFD  |
#------->+                               +-------------+
#        |
#        |                   Lin.Fit     +-------------+
#        |                 +------------>| LE improved |
#        |                 |             +-------------+
#        | No Gauss Fit    |
#        +---------------->+
#                          |
#                          | No Lin.Fit  +-------------+
#                          +------------>| Simple LE   |
#                                        +-------------+
#
SaveSinglePlotConvolution    = true;
SaveConvDataToFile           = true;
MakeLinearFitNearThreshold   = true;
MakeGaussianFitNearVmax      = true;
MakeTheoreticalTOA           = false;



#-----------------------------------------------------------------------------#
#   NOISE SIMULATION
#-----------------------------------------------------------------------------#
#   DoMeasurementsWithNoise : Turn on all the measurments applied
#                             to signals with noise (independently if the
#                             noise is simulated or not).
#
# - AddSimulatedNoise: add the simulated noise to the convoluted signal.
#                      The "sigma_noise" value has to be set in the
#                      transfer function option.
#
# - UseRedNoise:       if the previus flag is true, 
#                      a red noise can be added instead of a white noise.
#                      The correlation "r_rednoise" has to be
#                      specified in the transfer function option.
#
# - AddNoiseFromFiles: if true take the noise samples from a set of files
#                      prenset in the NoiseDirectory
#                      For using this option, write the directory of
#                      all the noise samples. 
#                      The format within the file must be of 
#                      N rows and 1 column, 
#                      corresponding to each noise sample.
#
#                      N.B.: the samples are added to the digitized signal
#                            (if digitazion is ON), the user has to be aware 
#                            of the correct time step
#  
DoMeasurementsWithNoise      = true;
AddSimulatedNoise            = false;
UseRedNoise                  = true;
AddNoiseFromFiles            = false;
NoiseDirectory               = "/home/dbrundu/Scaricati/TCodeCurves/Stefania_noise_BaselineCorr/New/Noise-10-11_1_012452_baselineFree_50V/";


#-----------------------------------------------------------------------------#
# Landau fluctuation factor to be applied
# to input signals 
LandauFluctuation            = false;
landaufactor_mean            = 1.0;
landaufactor_sigma           = 0.15;


#-----------------------------------------------------------------------------#
# Resolution of a time tagger for input signals
# It applies a time shift to each time measurment
# according to a gaussian with the specified sigma
TimeReferenceResolution      = false;
timeref_sigma                = 12e-12;


#-----------------------------------------------------------------------------#
# Refilter the output signal to remove high frequency
# using a Butterworth Filter. You can choose to filter
# only the noise, or signal+noise
LowPassFilter                = false;
FilterOnlyNoise              = false;
LowPassFrequency             = 1e9;
LowPassOrder                 = 1;


#-----------------------------------------------------------------------------#
# Apply the correction of LE with TOT measurement,
# Before turn this ON you have ti calibrate the correction curve,
# i.e. get the correct values of A and B parameters
TOTcorrection                = false;
TOT_a                        = 0.0;
TOT_b                        = 0.0;


#-----------------------------------------------------------------------------#
# Monitor the signal analysis
# These options will update continuosly some plots
# from the main TOA measurments.
PlotRMfit                    = false;
PlotLinFit                   = false;
PlotGausFit                  = false;
DelayMonitoring              = 0;





#-----------------------------------------------------------------------------#
#   SELECTION OF TRANSFER FUNCTION 
#-----------------------------------------------------------------------------#
# Choose the transfer function to be used (insert the title of 
# one of the configuration block).
# This will select one of the following configuration block.
# If the "FromFile" is chosen, the full path
# of the transfer function has to be passed in the configuration block
# The internal format must be "time Y", 
# where Y is the impedance, or transimpedance.
TransferFunction = "FromFile";
TFFile = "dummy";




#-----------------------------------------------------------------------------#
#   TRANSFER FUNCTION OPTIONS
#-----------------------------------------------------------------------------#
# Configuration of transfer functions
# Each h(t) has a unique ID in order
# to easily switch between them. 
# Do not modify the ID number, this will cause a run-time error.
#
TIA_BJT_2stages:{
    ID          = 1;        # identifier of tr.function
    Nsamples    = 4096;     # number of initial samples of signals
    Nbins       = 50;       # number of bins for the convolution plot
    minplot     = 0.0;      # minimum time for convolution time
    maxplot     = 4e-9;     # maximum time for convolution time
    dT          = 1e-12;    # initial time step of signals (in seconds)
    LEthr       = 0.01;     # Leading edge threshold
    CFD_fr      = 0.35;     # Fraction of CFD wrt maximum value
    sigma_noise = 0.00225;  # Sigma of the noise fluctuations
    r_rednoise  = 0.985112; # Correlation of noise samples in case of red noise
    sampling_dT = 50e-12;   # final time step of signals (in seconds) after digitization
    bound_fit   = 20;       # half of the number of samples to be used in linear fits (for time measurments)
    RM_delay    = 100e-12;  # time shift to delay the curve for "reference method" TOA measurment
    Rp          = 400.0;
    Rf          = 3000.0;
    Rl          = 25.0
    gm1         = 0.615;
    Rf2         = 3000.0;
    Rl2         = 25.0;
    gm2         = 0.8;
    ci          = 2e-12;
    co          = 4e-12;
    co2         = 4e-12;
    cf          = 60e-15;
};


TIA_BJT_2stages_GM:{
    ID          = 2;
    Nsamples    = 4096;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.004;
    r_rednoise  = 0.970446;
    sampling_dT = 50e-12;
    bound_fit   = 20;
    RM_delay    = 100e-12;
    Rp          = 300.0;
    Rf          = 3000.0;
    Rl          = 25.0;
    gm1         = 0.8;
    Rf2         = 4000.0;
    Rl2         = 25.0;
    gm2         = 0.7;
    ci          = 1.5e-12;
    co          = 1.5e-12;
    co2         = 1.8e-12;
    cf          = 60e-15;
};


TIA_MOS:{
    ID          = 0;
    Nsamples    = 131072;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 50e-9;
    dT          = 1e-12;
    LEthr       = 0.03;
    CFD_fr      = 0.35;
    sigma_noise = 0.0017;
    r_rednoise  = 0.998501;
    sampling_dT = 10e-12;
    bound_fit   = 20;
    RM_delay    = 1000e-12;
    Rf          = 3000000.0;
    Rl          = 570000.0;
    gm          = 55e-6;
    ci          = 105e-15;
    co          = 21e-15;
    cf          = 5e-15;
};


TIA_IdealInt:{
    ID          = 4;
    Nsamples    = 131072;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.02;
    CFD_fr      = 0.35;
    sigma_noise = 0.0017;
    r_rednoise  = 0.998501;
    sampling_dT = 50e-12;
    bound_fit   = 200;
    RM_delay    = 100e-12;
    z0          = 110e+3;
    tau1        = 7.74e-9;
    tau2        = 18.81e-9;
    tauz        = 12.66e-9;
};


TIA_BJT_1stage :{
    ID          = 3;
    Nsamples    = 4096;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.00225;
    r_rednoise  = 0.985112;
    sampling_dT = 50e-12;
    bound_fit   = 20;
    RM_delay    = 100e-12;
    Rp          = 400.0; 
    Rf          = 4000.0; 
    Rl          = 35.0;
    gm          = 0.615;
    ci          = 2e-12; 
    co          = 4e-12; 
    cf          = 60e-15;
};


FromFile :{
    ID          = 5;
    TFFile      = "/home/osboxes/Desktop/TFBoost/build/results_deconv_diamond/TF1ps.txt";
    //TFFile      = "/home/osboxes/Desktop/TFBoost/build/results_deconv_diamond/kansasTF.txt";
    NlinesToSkip = 0;
    Nsamples    = 20000;
    Nbins       = 100;
    minplot     = 0.0;
    maxplot     = 8e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.00281; #0.00225
    r_rednoise  = 0.998;   #0.985112
    sampling_dT = 20e-12;
    bound_fit   = 3;
    RM_delay    = 200e-12;
};



HistogramsPars:{

    TOA_LE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Leading Edge";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_CFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival CFD";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_RM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Ref.Method";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Tpeak:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time at peak";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Vpeak:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V at peak";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    dvdt_LE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on LE threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_CFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on CFD threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_RM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on RM threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    VonThLE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on LE threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThCFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on CFD threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThRM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on RM threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    TOT:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time over threshold";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    

    TOA_LE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Leading Edge with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_CFD_noise:{
        min    =  1.2e-9;
        max    =  2.2e-9;
        Nbins  =  200;
        title  = "Time of arrival CFD with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_RM_noise:{
        min    =  1.2e-9;
        max    =  2.2e-9;
        Nbins  =  200;
        title  = "Time of arrival Ref.Method with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Tpeak_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time at peak with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Vpeak_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V at peak with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    dvdt_LE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on LE threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_CFD_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on CFD threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_RM_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on RM threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    VonThLE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on LE threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThCFD_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on CFD threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThRM_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on RM threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    TOT_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time over threshold with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
};



