###############################################################################
###############################################################################
#########################    CONFIGURATION FILE     ###########################
###############################################################################
###############################################################################


#-----------------------------------------------------------------------------#
# Output directory 
# Inside this directory two other dirs are 
# created : plots/ and data/
OutputDirectory = "results_new_withTOT/"; 


#-----------------------------------------------------------------------------#
# Input directory (where are the input signal)
# InputFileExtension is the format of the file to read (.txt or .dat)
# NlineaToSkip is an integer to skip the first N lines of files
# The internal format of the input files can be configured using:
# - the token by which the data are separated in the file (space, tab, comma)
# - the column in which the actual values are stored (starting from 0)
InputDirectory     = "/home/dbrundu/Scaricati/simulation_results_angelo/Doppio_150V_nozonabalorda/"; 
InputFileExtension = ".dat";
NlinesToSkip       = 0;
token              = " ";
column             = 1;


#-----------------------------------------------------------------------------#
# maximum input files to process
MaxInputFiles      = 10;


#-----------------------------------------------------------------------------#
# time offset for the input signal (in ps)
offset             = 0; 


#-----------------------------------------------------------------------------#
# Flag to use always the same curve,
# if true, please indicate the file name
UseSameCurve       = false;
FileName           = "Simulation150V_4439.dat";


#-----------------------------------------------------------------------------#
# For storage reason only one plot with
# the convolution is plotted. This index chooses
# which one has to be plotted
IdxConvtoSave      = 9;


#-----------------------------------------------------------------------------#
# Flag to use the analytical convolution (true) or take the 
# already convoluted signal from files (false)
# If false, indicate the full path of the file.
# The internal format must be "time voltage"
MakeConvolution    = true;
ConvolutionFile    = "dummy";


#-----------------------------------------------------------------------------#
# Flag to digitize the signal
# simulating a TDC
# This will be actived only if the convolution
# is active
MakeDigitization   = true;
randomphase        = true;


#-----------------------------------------------------------------------------#
# Trigger to reject empty events
# Leading Edge threshold to apply
# to tracks without noise and LE
# to be applied with noise
LE_reject_nonoise  = 0.001;
LE_reject_noise    = 0.015;


#-----------------------------------------------------------------------------#
# Control flow flags
# The choice of these controls
# turn on or off some measurements:
#
#                                       +--------------+
#                            Lin.Fit    | CFD improved |
#                          +----------->| Ref.Method   |
#                          |            | LE improved  |
#           Gauss Fit      |            +--------------+
#        +---------------->+
#        |                 |             +-------------+
#        |                 | No Lin.Fit  | Simple LE   |
# TOA    |                 +------------>| Simple CFD  |
#------->+                               +-------------+
#        |
#        |                   Lin.Fit     +-------------+
#        |                 +------------>| LE improved |
#        |                 |             +-------------+
#        | No Gauss Fit    |
#        +---------------->+
#                          |
#                          | No Lin.Fit  +-------------+
#                          +------------>| Simple LE   |
#                                        +-------------+
#
SaveSinglePlotConvolution    = true;
SaveConvDataToFile           = false;
MakeLinearFitNearThreshold   = true;
MakeGaussianFitNearVmax      = true;
AddNoise                     = true;
UseRedNoise                  = true;
MakeTheoreticalTOA           = false;


#-----------------------------------------------------------------------------#
# Landau fluctuation factor to be applied
# to input signals
# N.B. 
LandauFluctuation            = false;
landaufactor_mean            = 1.0;
landaufactor_sigma           = 0.15;


#-----------------------------------------------------------------------------#
# Resolution of a time trigger for input signals
# It apply a time shift to each input signal
# according to a gaussian with the specified sigma
# N.B. 
TimeReferenceResolution      = false;
timeref_sigma                = 12e-12;


#-----------------------------------------------------------------------------#
# Correction of LE with TOT measurement
# N.B. 
TOTcorrection                = false;
TOT_a                        = 0.0;
TOT_b                        = 0.0;


#-----------------------------------------------------------------------------#
# Monitor the signal analysis
# N.B. 
PlotRMfit                    = false;
PlotLinFit                   = false;
PlotGausFit                  = false;
DelayMonitoring              = 0;

#-----------------------------------------------------------------------------#
# Choose the transfer function to use
# This will select one of the following 
# configuration block
# If the "FromFile" is chosen, the full path
# of the transfer function has to be passed.
# The internal format must be "t Y"
TransferFunction = "TIA_MOS";
TFFile = "dummy";


#-----------------------------------------------------------------------------#
# Configuration of transfer functions
# Each h(t) has a unique ID in order
# to easily switch between them 

TIA_BJT_2stages:{
    ID          = 1;
    Nsamples    = 4096;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.00225;
    r_rednoise  = 0.985112;
    sampling_dT = 50e-12;
    bound_fit   = 20;
    RM_delay    = 100e-12;
    Rp          = 400.0;
    Rf          = 3000.0;
    Rl          = 25.0
    gm1         = 0.615;
    Rf2         = 3000.0;
    Rl2         = 25.0;
    gm2         = 0.8;
    ci          = 2e-12;
    co          = 4e-12;
    co2         = 4e-12;
    cf          = 60e-15;
};


TIA_BJT_2stages_GM:{
    ID          = 2;
    Nsamples    = 4096;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.004;
    r_rednoise  = 0.970446;
    sampling_dT = 50e-12;
    bound_fit   = 20;
    RM_delay    = 100e-12;
    Rp          = 300.0;
    Rf          = 3000.0;
    Rl          = 25.0;
    gm1         = 0.8;
    Rf2         = 4000.0;
    Rl2         = 25.0;
    gm2         = 0.7;
    ci          = 1.5e-12;
    co          = 1.5e-12;
    co2         = 1.8e-12;
    cf          = 60e-15;
};


TIA_MOS:{
    ID          = 0;
    Nsamples    = 131072;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 50e-9;
    dT          = 1e-12;
    LEthr       = 0.03;
    CFD_fr      = 0.35;
    sigma_noise = 0.0017;
    r_rednoise  = 0.998501;
    sampling_dT = 10e-12;
    bound_fit   = 20;
    RM_delay    = 1000e-12;
    Rf          = 3000000.0;
    Rl          = 570000.0;
    gm          = 55e-6;
    ci          = 105e-15;
    co          = 21e-15;
    cf          = 5e-15;
};


TIA_IdealInt:{
    ID          = 4;
    Nsamples    = 131072;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.02;
    CFD_fr      = 0.35;
    sigma_noise = 0.0017;
    r_rednoise  = 0.998501;
    sampling_dT = 50e-12;
    bound_fit   = 200;
    RM_delay    = 100e-12;
    z0          = 110e+3;
    tau1        = 7.74e-9;
    tau2        = 18.81e-9;
    tauz        = 12.66e-9;
};


TIA_BJT_1stage :{
    ID          = 3;
    Nsamples    = 4096;
    Nbins       = 50;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.00225;
    r_rednoise  = 0.985112;
    sampling_dT = 50e-12;
    bound_fit   = 20;
    RM_delay    = 100e-12;
    Rp          = 400.0; 
    Rf          = 4000.0; 
    Rl          = 35.0;
    gm          = 0.615;
    ci          = 2e-12; 
    co          = 4e-12; 
    cf          = 60e-15;
};


FromFile :{
    ID          = 5;
    TFFile      = "../examples/conv_input_files/TF_genova.txt";
    NlinesToSkip = 0;
    Nsamples    = 8000;
    Nbins       = 100;
    minplot     = 0.0;
    maxplot     = 4e-9;
    dT          = 1e-12;
    LEthr       = 0.01;
    CFD_fr      = 0.35;
    sigma_noise = 0.00225;
    r_rednoise  = 0.985112;
    sampling_dT = 10e-12;
    bound_fit   = 4;
    RM_delay    = 200e-12;
};



HistogramsPars:{

    TOA_LE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Leading Edge";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_CFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival CFD";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_RM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Ref.Method";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Tpeak:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time at peak";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Vpeak:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V at peak";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    dvdt_LE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on LE threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_CFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on CFD threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_RM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on RM threshold";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    VonThLE:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on LE threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThCFD:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on CFD threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThRM:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on RM threshold";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    TOT:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time over threshold";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    

    TOA_LE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Leading Edge with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_CFD_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival CFD with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    TOA_RM_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time of arrival Ref.Method with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Tpeak_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time at peak with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
    
    Vpeak_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V at peak with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    dvdt_LE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on LE threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_CFD_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on CFD threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    dvdt_RM_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Slope (dV/dT) on RM threshold with noise";
        xtitle = "Slope (uV/ps)";
        ytitle = "counts";
    };
    
    VonThLE_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on LE threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThCFD_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on CFD threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    VonThRM_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "V on RM threshold with noise";
        xtitle = "Voltage (V)";
        ytitle = "counts";
    };
    
    TOT_noise:{
        min    =  0.0;
        max    = -1.0;
        Nbins  =  200;
        title  = "Time over threshold with noise";
        xtitle = "Time (s)";
        ytitle = "counts";
    };
};



